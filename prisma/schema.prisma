// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  password      String
  role          Role           @default(USER)
  refreshTokens RefreshToken[]
  Duty          Duty[]
  createdAt     DateTime       @default(now())

  @@map("users")
}

model Duty {
  id            Int      @id @default(autoincrement())
  title         String
  description   String?
  orderInColumn Int
  status        Status   @default(BACKLOG)
  priority      Priority @default(MEDIUM)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  assignedTo    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String

  @@map("duties")
}

model RefreshToken {
  id        String   @id
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  expiresAt DateTime

  @@map("refreshTokens")
}

enum Status {
  BACKLOG
  TODO
  INPROGRESS
  DONE
}

enum Role {
  USER
  MODERATOR
  ADMIN
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}
